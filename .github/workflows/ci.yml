name: RRenderer CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  lint-major:
    name: Lint (main/dev)
    if: >
      github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev' ||
      (github.event_name == 'pull_request' &&
       (github.event.pull_request.base.ref == 'main' || github.event.pull_request.base.ref == 'dev'))
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y clang-tidy-19 cmake g++ ninja-build vulkan-tools libvulkan-dev glslang-tools glslang-dev xorg-dev libx11-dev mesa-common-dev libwayland-dev wayland-protocols libxkbcommon-dev
          alias clang-tidy=clang-tidy-19

      - name: Configure CMake
        run: cmake --preset release

      - name: Build
        run: cmake --build --preset release

      - name: clang-tidy
        run: clang-tidy -p ./ --warnings-as-errors=\* $(find src/ -name '*.cpp' -or -name '*.hpp')

  build-major:
    name: Build & Test (main/dev)
    if: >
      github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev' ||
      (github.event_name == 'pull_request' &&
       (github.event.pull_request.base.ref == 'main' || github.event.pull_request.base.ref == 'dev'))
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y cmake g++ ninja-build vulkan-tools libvulkan-dev glslang-tools glslang-dev xorg-dev libx11-dev mesa-common-dev libwayland-dev wayland-protocols libxkbcommon-dev

      - name: Configure CMake
        run: cmake --preset release

      - name: Build
        run: cmake --build --preset release

      - name: Test
        run: ctest --test-dir build/release/test/ --rerun-failed --output-on-failure

  lint-feature:
    name: Lint (feature branch)
    if: >
      github.ref != 'refs/heads/main' && github.ref != 'refs/heads/dev' &&
      !(github.event_name == 'pull_request' &&
        (github.event.pull_request.base.ref == 'main' || github.event.pull_request.base.ref == 'dev'))
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y clang-tidy-19 cmake g++ ninja-build vulkan-tools libvulkan-dev glslang-tools glslang-dev xorg-dev libx11-dev mesa-common-dev libwayland-dev wayland-protocols libxkbcommon-dev
          alias clang-tidy=clang-tidy-19

      - name: Configure CMake
        run: cmake --preset debug

      - name: Build
        run: cmake --build --preset debug

      - name: clang-tidy
        run: clang-tidy -p ./ --warnings-as-errors=\* $(find src/ -name '*.cpp' -or -name '*.hpp')

  build-feature:
    name: Build & Test (feature branch)
    if: >
      github.ref != 'refs/heads/main' && github.ref != 'refs/heads/dev' &&
      !(github.event_name == 'pull_request' &&
        (github.event.pull_request.base.ref == 'main' || github.event.pull_request.base.ref == 'dev'))
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y cmake g++ ninja-build vulkan-tools libvulkan-dev glslang-tools glslang-dev xorg-dev libx11-dev mesa-common-dev libwayland-dev wayland-protocols libxkbcommon-dev

      - name: Configure CMake
        run: cmake --preset debug

      - name: Build
        run: cmake --build --preset debug

      - name: Test
        run: ctest --test-dir build/debug/test/ --rerun-failed --output-on-failure

